import { array, type } from "../../guardian/mod.ts";

export const enum DataTypes {
  "INT" = "INT",
  "INTEGER" = "INTEGER",
  "SMALLINT" = "SMALLINT",
  "TINYINT" = "TINYINT",
  "SERIAL" = "SERIAL",
  "SMALLSERIAL" = "SMALLSERIAL",
  "BIGSERIAL" = "BIGSERIAL",
  "BIGINT" = "BIGINT",
  "BIT" = "BIT",
  "BOOLEAN" = "BOOLEAN",
  "BINARY" = "BINARY",
  "REAL" = "REAL",
  "FLOAT" = "FLOAT",
  "DOUBLE PRECISION" = "DOUBLE PRECISION",
  "DOUBLE" = "DOUBLE",
  "NUMERIC" = "NUMERIC",
  "NUMBER" = "NUMBER",
  "DECIMAL" = "DECIMAL",
  "MONEY" = "MONEY",
  "CHAR" = "CHAR",
  "CHARACTER" = "CHARACTER",
  "VARCHAR" = "VARCHAR",
  "NVARCHAR" = "NVARCHAR",
  "NCHAR" = "NCHAR",
  "CHARACTER VARYING" = "CHARACTER VARYING",
  "DATE" = "DATE",
  "TIME" = "TIME",
  "DATETIME" = "DATETIME",
  "TIMESTAMP" = "TIMESTAMP",
  "BYTEA" = "BYTEA",
  "TEXT" = "TEXT",
  "UUID" = "UUID",
  "JSON" = "JSON",
  "ARRAY" = "ARRAY",
  "ARRAY_STRING" = "ARRAY_STRING",
  "ARRAY_INTEGER" = "ARRAY_INTEGER",
  "ARRAY_BIGINT" = "ARRAY_BIGINT",
  "ARRAY_DECIMAL" = "ARRAY_DECIMAL",
  "ARRAY_BOOLEAN" = "ARRAY_BOOLEAN",
  "ARRAY_DATE" = "ARRAY_DATE",
  "AUTO_INCREMENT" = "AUTO_INCREMENT",
}

export type DataType = keyof typeof DataTypes;

export const DataTypeMap = {
  "INT": type("number"),
  "INTEGER": type("number"),
  "SMALLINT": type("number"),
  "TINYINT": type("number"),
  "SERIAL": type("number"),
  "SMALLSERIAL": type("number"),
  "BIGSERIAL": type("bigint"),
  "BIGINT": type("bigint"),
  "BIT": type("boolean"),
  "BOOLEAN": type("boolean"),
  "BINARY": type("boolean"),
  "REAL": type("number"),
  "FLOAT": type("number"),
  "DOUBLE PRECISION": type("number"),
  "DOUBLE": type("number"),
  "NUMERIC": type("number"),
  "NUMBER": type("number"),
  "DECIMAL": type("number"),
  "MONEY": type("number"),
  "CHAR": type("string"),
  "CHARACTER": type("string"),
  "VARCHAR": type("string"),
  "NVARCHAR": type("string"),
  "NCHAR": type("string"),
  "CHARACTER VARYING": type("string"),
  "DATE": type("date"),
  "TIME": type("date"),
  "DATETIME": type("date"),
  "TIMESTAMP": type("date"),
  "BYTEA": type("string"),
  "TEXT": type("string"),
  "UUID": type("string"),
  "JSON": type("object"),
  "ARRAY": array(),
  "ARRAY_STRING": array(),
  "ARRAY_INTEGER": array(),
  "ARRAY_BIGINT": array(),
  "ARRAY_DECIMAL": array(),
  "ARRAY_BOOLEAN": array(),
  "ARRAY_DATE": array(),
  "AUTO_INCREMENT": type("number"),
};

export type DataLength = {
  precision: number;
  scale: number;
} | number;
