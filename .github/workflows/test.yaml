name: 'Run Tests'

permissions:
  contents: read

on:
  workflow_dispatch:
  # inputs:
  #   denoVersuio:
  #     description: 'Log level'
  #     required: true
  #     default: 'warning'
  #     type: choice
  #     options:
  #       - info
  #       - warning
  #       - debug
  #   print_tags:
  #     description: 'True to print to STDOUT'
  #     required: true
  #     type: boolean
  #   tags:
  #     description: 'Test scenario tags'
  #     required: true
  #     type: string
  #   environment:
  #     description: 'Environment to run tests against'
  #     type: environment
  #     required: true
  push:
    paths-ignore:
      - .dockerignore
      - .gitignore
      - .github/ISSUE_TEMPLATE/*
      - .github/PULL_REQUEST_TEMPLATE*
      - '**.md'
      - ./LICENSE
      - .vscode/*
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        deno:
          # - v1.x
          - v2.x
          - canary
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Docker on macOS
        if: matrix.os == 'macOS-latest'
        run: brew install --cask docker

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno}}

      - name: Format
        run: deno fmt --check

      - name: Lint
        run: deno task check

      - name: Spell-check
        uses: crate-ci/typos@master
        if: matrix.os == 'ubuntu-latest'
        with:
          config: ./.github/typos.toml

  test:
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgrespw
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      maria:
        image: mariadb
        env:
          MARIADB_ROOT_PASSWORD: mariapw2
          MARIADB_USER: maria
          MARIADB_PASSWORD: mariapw
          MARIADB_DATABASE: maria
        ports:
          - 3306:3306
        options: >-
          --health-cmd="healthcheck.sh  --connect --innodb_initialized"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        deno:
          # - v1.x
          - v2.x
          - canary
        os:
          - ubuntu-latest
          # - windows-latest
          # - macOS-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      # - name: Install Docker on macOS
      #   if: matrix.os == 'macOS-latest'
      #   run: brew install --cask docker

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }}

      - name: Run tests
        run: deno task test

      # - name: Upload coverage
      #   uses: codecov/codecov-action@v4
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      #   with:
      #     name: ${{ matrix.os }}-${{ matrix.deno }}
